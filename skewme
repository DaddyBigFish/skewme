#!/bin/bash
if [[ $EUID -ne 0 ]]; then
  echo "Sorry, must be run as sudo."
  exit 1
fi
if [[ -z "$1" ]]; then
  echo "Sorry, an NTP server IP address is required."
  exit 1
fi
if ! [[ "$1" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
  echo "Sorry, that's an invalid IP address."
  exit 1
fi


script_path=$(realpath "$0")
script_name=$(echo "$script_path" | rev | cut -d'/' -f1 | rev)

if ps aux | grep -F "$script_path" | grep -v grep | grep -vw "$$" >/dev/null; then
  echo "Sorry, the process is already running. If you wish to start it again please run: killall $script_name"
  exit 1
fi

ntp_ip="$1"
rtc=$(timedatectl show -p RTCTimeUSec --value | cut -d' ' -f2-3)
ntp=$(sudo ntpdate -u "$ntp_ip" 2>/dev/null | cut -d '.' -f1 | grep '-')
rtc_sec=$(date -d "$rtc" +%s)
ntp_sec=$(date -d "$ntp" +%s)
diff_sec=$((ntp_sec - rtc_sec))
offset=$((diff_sec / 3600))
[[ "$offset" -ge 0 ]] && offset="+$offset" || offset="$offset"
(
  while true; do
    base_time=$(timedatectl show -p RTCTimeUSec --value | cut -d' ' -f2-5)
    new_time=$(date -u -d "$base_time $offset hours" '+%Y-%m-%d %H:%M:%S')
    sudo date -u -s "$new_time" 2>/dev/null
    sleep 2
  done
) &
disown
